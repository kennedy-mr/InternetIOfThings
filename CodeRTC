#include <AnalogRTCLibrary.h>  //This library is needed to interact with the RTC so that the current time can be set

MAX31341 rtc(&Wire, MAX31341_I2C_ADDRESS);

struct tm rtc_ctime;
    
void print_time(void) {
    char buf[40];

    int ret = rtc.get_time(&rtc_ctime);
    if (ret) {
        Serial.println("get_time failed!");
        return;
    }
    
    strftime(buf, sizeof(buf), "%d-%m-%Y %H:%M:%S", &rtc_ctime);
    Serial.println(buf);  //Displays the date in the format day/month/year and the time in the format hour:minute:second
}

void setup() {
    int ret;

    Serial.begin(115200);
    Serial.println("---------------------");
    Serial.println("Set get rtc use case example:");
    Serial.println("RTC will be set to specific value then it will be read every second");
    Serial.println(" ");

    rtc.begin();  //RTC is initialised
    
    rtc_ctime.tm_year = 125; //years since 1900
    rtc_ctime.tm_mon  = 3;  //0-11 months in a year, currently set to March (months start at index 0)
    rtc_ctime.tm_mday = 10;  //1-31 days in a month, currently set to the 10th
    rtc_ctime.tm_hour = 15;  //0-23 hours in a day, currently set to 3pm
    rtc_ctime.tm_min  = 10;  //0-59 minutes in an hour, currently set to 10 past
    rtc_ctime.tm_sec  = 0;   //0-61 seconds in a minute
    //
    rtc_ctime.tm_yday  = 0;  // 0-365
    rtc_ctime.tm_wday  = 0;  // 0-6
    rtc_ctime.tm_isdst = 0;  // Daylight saving flag
    
    ret = rtc.set_time(&rtc_ctime);
    if (ret) {
        Serial.println("Set time failed!");
    } //if the rtc fails to set a time
}

void loop()  {
    delay(1000);  //1 second delay
    print_time();  //prints current time
}  
